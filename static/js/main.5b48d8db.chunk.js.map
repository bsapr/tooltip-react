{"version":3,"sources":["components/Button.js","components/Dropdown.js","components/App.js","index.js"],"names":["Button","props","state","hover","this","setState","tooltipStyle","display","position","className","onMouseOver","handleMouseIn","bind","onMouseOut","handleMouseOut","style","Component","Dropdown","changePosition","event","target","value","console","log","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA0CeA,E,kDAvCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAO,GAHQ,E,4DASjBC,KAAKC,SAAS,CAAEF,OAAO,M,uCAKvBC,KAAKC,SAAS,CAAEF,OAAO,M,+BAIvB,IAAMG,EAAe,CACnBC,QAASH,KAAKF,MAAMC,MAAQ,QAAU,QAGhCK,EAAaJ,KAAKH,MAAlBO,SAER,OACE,yBAAKC,UAAU,eACb,4BACEC,YAAaN,KAAKO,cAAcC,KAAKR,MACrCS,WAAYT,KAAKU,eAAeF,KAAKR,OAFvC,WAKE,yBAAKK,UAAW,eAAiBD,EAAUO,MAAOT,GAC/CF,KAAKH,MAAMO,gB,GAjCHQ,aC+BNC,E,kDA3Bb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAQRiB,eAAiB,SAACC,GAChB,EAAKd,SAAS,CAAEG,SAAUW,EAAMC,OAAOC,QACvCC,QAAQC,IAAI,EAAKrB,MAAMM,WATvB,EAAKN,MAAQ,CAEXM,SAAU,OAJK,E,qDAcjB,OACE,yBAAKC,UAAU,OACb,4BAAQe,SAAUpB,KAAKc,gBACrB,4BAAQG,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAEF,kBAAC,EAAD,CAAQb,SAAUJ,KAAKF,MAAMM,gB,GAvBdQ,aCaRS,E,kDAbb,WAAYxB,GAAQ,uCACZA,G,qDAGN,OACE,yBAAKQ,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,Y,GARQO,aCClBU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5b48d8db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hover: false,\r\n    };\r\n  }\r\n\r\n  //Function for changing the hover state when mouse pointer enters inside the button area\r\n  handleMouseIn() {\r\n    this.setState({ hover: true });\r\n  }\r\n\r\n  //Function for changing the hover state when mouse pointer moves out of the button area\r\n  handleMouseOut() {\r\n    this.setState({ hover: false });\r\n  }\r\n  render() {\r\n    //   setting the display of tooltip as block and none according to the  hovering of mouse\r\n    const tooltipStyle = {\r\n      display: this.state.hover ? \"block\" : \"none\",\r\n    };\r\n\r\n    const { position } = this.props;\r\n    // sending the selected option value as a prop to a button component\r\n    return (\r\n      <div className=\"hoverButton\">\r\n        <button\r\n          onMouseOver={this.handleMouseIn.bind(this)}\r\n          onMouseOut={this.handleMouseOut.bind(this)}\r\n        >\r\n          Hover me\r\n          <div className={\"tooltiptext \" + position} style={tooltipStyle}>\r\n            {this.props.position}\r\n          </div>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\n// Component class for drop down menu\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // default position is top\r\n      position: \"top\",\r\n    };\r\n  }\r\n\r\n  //   Function to change the position as per the option selected.\r\n  changePosition = (event) => {\r\n    this.setState({ position: event.target.value });\r\n    console.log(this.state.position);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"box\">\r\n        <select onChange={this.changePosition}>\r\n          <option value=\"top\">Top</option>\r\n          <option value=\"bottom\">Bottom</option>\r\n          <option value=\"left\">Left</option>\r\n          <option value=\"right\">Right</option>\r\n        </select>\r\n        <Button position={this.state.position} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dropdown;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dropdown from \"./Dropdown\";\nimport Button from \"./Button\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"dropdownPosition\">\n          <Dropdown />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}